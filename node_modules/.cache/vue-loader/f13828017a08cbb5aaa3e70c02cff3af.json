{"remainingRequest":"D:\\wrok\\day13\\laozhang\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wrok\\day13\\laozhang\\src\\components\\PartFour.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wrok\\day13\\laozhang\\src\\components\\PartFour.vue","mtime":1565249373262},{"path":"D:\\wrok\\day13\\laozhang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\wrok\\day13\\laozhang\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\wrok\\day13\\laozhang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\wrok\\day13\\laozhang\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\n// 引入基本模板\r\nlet echarts = require(\"echarts/lib/echarts\");\r\n\r\nexport default {\r\n  name: \"partFour\",\r\n  data() {\r\n    return {\r\n      partFour: \"part-four\",\r\n      curWidth: 0,\r\n\r\n    };\r\n  },\r\n    props: {\r\n    //父组件需要传递的参数：id，width，height，option\r\n    id: {\r\n      type: String\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: \"100%\"\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: \"300px\"\r\n    },\r\n    option: {\r\n      type: Object,\r\n      //Object类型的prop值一定要用函数return出来，不然会报错。原理和data是一样的，\r\n      //使用闭包保证一个vue实例拥有自己的一份props\r\n      default() {\r\n        return {\r\n                 // 标题\r\n        title: {\r\n          // 标题文本\r\n          text: \"文章成就统计\",\r\n          // 标题文本样式\r\n          textStyle: {\r\n            color: \"#fff\"\r\n          },\r\n          // 标题位置\r\n          x: \"center\"\r\n        },\r\n        // 图形布局\r\n        grid: {\r\n          // 距离底部高度\r\n          bottom: \"20\"\r\n        },\r\n        // 横轴\r\n        xAxis: {\r\n          show: false,\r\n          type: \"category\",\r\n          data: [\"Github 提交：\\n1141\", \"Github Star数：\\n269\", \"掘金点赞量：\\n1508\", \"掘金关注者：\\n234\"],\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#fff\"\r\n            }\r\n          },\r\n          axisLabel: {\r\n            // 横轴信息全部显示\r\n            interval: 0\r\n          }\r\n        },\r\n        // 纵轴\r\n        yAxis: {\r\n          type: \"value\",\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#fff\"\r\n            }\r\n          },\r\n          axisLabel: {\r\n            // 横轴信息全部显示\r\n            interval: 0\r\n          }\r\n        },\r\n        // 图形系列\r\n        series: [\r\n          {\r\n            // 图类型\r\n            type: \"bar\",\r\n            // 数据\r\n            data: [1141, 269, 1508, 234],\r\n            // 文本\r\n            label: {\r\n              show: true,\r\n              position: \"top\",\r\n              color: \"#fff\",\r\n              formatter: \"{b}\"\r\n            },\r\n            // 柱条样式\r\n            itemStyle: {\r\n              color: \"deepskyblue\"\r\n            },\r\n            zlevel: 1\r\n          }\r\n        ]\r\n        };\r\n      }\r\n    }\r\n  },\r\n  beforeMount() {\r\n    this.curWidth = document.documentElement.clientWidth || document.body.clientWidth;\r\n    if(this.curWidth < 1600) {\r\n      this.partFour = \"part-four-responsive\"\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.drawECharts();\r\n\r\n  },\r\n  methods: {\r\n    getfour(){\r\n      var myChart = echarts.init(document.getElementById(\"part-four\"));\r\n      return myChart\r\n    },\r\n    drawECharts() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      console.log(1111)\r\n      let myChart = echarts.init(document.getElementById(\"part-four\"));\r\nconsole.log(this.option.series[0])\r\nconsole.log(this.option.series[0])\r\n      myChart.setOption(this.option);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["PartFour.vue"],"names":[],"mappings":";;;;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PartFour.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div :class=\"partFour\" id=\"part-four\"></div>\r\n</template>\r\n\r\n<script>\r\n// 引入基本模板\r\nlet echarts = require(\"echarts/lib/echarts\");\r\n\r\nexport default {\r\n  name: \"partFour\",\r\n  data() {\r\n    return {\r\n      partFour: \"part-four\",\r\n      curWidth: 0,\r\n\r\n    };\r\n  },\r\n    props: {\r\n    //父组件需要传递的参数：id，width，height，option\r\n    id: {\r\n      type: String\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: \"100%\"\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: \"300px\"\r\n    },\r\n    option: {\r\n      type: Object,\r\n      //Object类型的prop值一定要用函数return出来，不然会报错。原理和data是一样的，\r\n      //使用闭包保证一个vue实例拥有自己的一份props\r\n      default() {\r\n        return {\r\n                 // 标题\r\n        title: {\r\n          // 标题文本\r\n          text: \"文章成就统计\",\r\n          // 标题文本样式\r\n          textStyle: {\r\n            color: \"#fff\"\r\n          },\r\n          // 标题位置\r\n          x: \"center\"\r\n        },\r\n        // 图形布局\r\n        grid: {\r\n          // 距离底部高度\r\n          bottom: \"20\"\r\n        },\r\n        // 横轴\r\n        xAxis: {\r\n          show: false,\r\n          type: \"category\",\r\n          data: [\"Github 提交：\\n1141\", \"Github Star数：\\n269\", \"掘金点赞量：\\n1508\", \"掘金关注者：\\n234\"],\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#fff\"\r\n            }\r\n          },\r\n          axisLabel: {\r\n            // 横轴信息全部显示\r\n            interval: 0\r\n          }\r\n        },\r\n        // 纵轴\r\n        yAxis: {\r\n          type: \"value\",\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#fff\"\r\n            }\r\n          },\r\n          axisLabel: {\r\n            // 横轴信息全部显示\r\n            interval: 0\r\n          }\r\n        },\r\n        // 图形系列\r\n        series: [\r\n          {\r\n            // 图类型\r\n            type: \"bar\",\r\n            // 数据\r\n            data: [1141, 269, 1508, 234],\r\n            // 文本\r\n            label: {\r\n              show: true,\r\n              position: \"top\",\r\n              color: \"#fff\",\r\n              formatter: \"{b}\"\r\n            },\r\n            // 柱条样式\r\n            itemStyle: {\r\n              color: \"deepskyblue\"\r\n            },\r\n            zlevel: 1\r\n          }\r\n        ]\r\n        };\r\n      }\r\n    }\r\n  },\r\n  beforeMount() {\r\n    this.curWidth = document.documentElement.clientWidth || document.body.clientWidth;\r\n    if(this.curWidth < 1600) {\r\n      this.partFour = \"part-four-responsive\"\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.drawECharts();\r\n\r\n  },\r\n  methods: {\r\n    getfour(){\r\n      var myChart = echarts.init(document.getElementById(\"part-four\"));\r\n      return myChart\r\n    },\r\n    drawECharts() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      console.log(1111)\r\n      let myChart = echarts.init(document.getElementById(\"part-four\"));\r\nconsole.log(this.option.series[0])\r\nconsole.log(this.option.series[0])\r\n      myChart.setOption(this.option);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.part-four {\r\n  width: 100%;\r\n  height: 310px;\r\n  border: 40px solid transparent;\r\n  border-image: url(\"~@/./assets/img/border_image.png\") 30 30 stretch;\r\n  background: #18202d;\r\n}\r\n.part-four-responsive {\r\n  width: 100%;\r\n  height: 310px;\r\n  border: 5px solid transparent;\r\n  border-image: url(\"~@/./assets/img/border_image.png\") 30 30 stretch;\r\n  background: #18202d;\r\n}\r\n</style>"]}]}